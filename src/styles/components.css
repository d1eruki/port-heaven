@layer components {
  .dotted-grid {
    background-size: 25px 25px;
  }

  .design {
    transition: var(--transition);
  }
  .design:hover {
    transform: translate(5px, 5px);
  }

  .corner-frame {
    --cf-color: var(--color-grey);
    --cf-size: 1px;
    --cf-length: 24px;
    background:
      linear-gradient(to right, var(--cf-color) 0%, var(--cf-color) 100%) top left / var(--cf-length) var(--cf-size) no-repeat,
      linear-gradient(to bottom, var(--cf-color) 0%, var(--cf-color) 100%) top left / var(--cf-size) var(--cf-length) no-repeat,
      linear-gradient(to right, var(--cf-color) 0%, var(--cf-color) 100%) top right / var(--cf-length) var(--cf-size) no-repeat,
      linear-gradient(to bottom, var(--cf-color) 0%, var(--cf-color) 100%) top right / var(--cf-size) var(--cf-length) no-repeat,
      linear-gradient(to right, var(--cf-color) 0%, var(--cf-color) 100%) bottom left / var(--cf-length) var(--cf-size) no-repeat,
      linear-gradient(to bottom, var(--cf-color) 0%, var(--cf-color) 100%) bottom left / var(--cf-size) var(--cf-length) no-repeat,
      linear-gradient(to right, var(--cf-color) 0%, var(--cf-color) 100%) bottom right / var(--cf-length) var(--cf-size) no-repeat,
      linear-gradient(to bottom, var(--cf-color) 0%, var(--cf-color) 100%) bottom right / var(--cf-size) var(--cf-length) no-repeat;
    background-origin: padding-box;
  }

  .app-cursor {
    position: fixed;
    left: 0;
    top: 0;
    width: var(--cursor-size);
    height: var(--cursor-size);
    border-radius: 50%;
    mix-blend-mode: difference;
    pointer-events: none;
    z-index: 1000;
    transform: translate(-50%, -50%);
    transition:
      width 0.18s ease,
      height 0.18s ease,
      opacity 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .app-cursor::after {
    content: attr(data-label);
    opacity: 0;
    transform: translateY(2px) scale(1);
    transition:
      opacity 0.18s ease,
      transform 0.18s ease;
  }

  .app-cursor.is-active {
    width: var(--cursor-size-active);
    height: var(--cursor-size-active);
  }

  .app-cursor.has-label {
    width: var(--cursor-size-label);
    height: var(--cursor-size-label);
    border-radius: 100px;
  }

  .app-cursor.has-label::after {
    opacity: 1;
    transform: translateY(0) scale(1);
  }

  .progress-bar {
    width: 1px;
    height: 0;
    transition: height 0.1s ease;
  }

  .shirt {
    transform: rotateY(180deg);
  }

  .profile fieldset {
    width: 180px;
    height: 180px;
  }

  .profile legend {
    line-height: 10px;
    animation: move 5s infinite linear alternate;
  }

  .profile fieldset:nth-of-type(2) {
    transform: rotate(90deg);
  }

  .profile fieldset:nth-of-type(3) {
    transform: rotate(180deg);
  }

  .profile fieldset:nth-of-type(4) {
    transform: rotate(-90deg);
  }

  .chess {
    width: 180px;
    height: 180px;
    grid-template-columns: repeat(18, 1fr);
    grid-template-rows: repeat(18, 1fr);
  }

  .profile-box {
    width: 180px;
    height: 180px;
    grid-area: 2 / 14 / 3 / 17;
  }

  .profile-box:hover .profile {
    transform: rotateY(180deg);
  }

  .profile-box:hover .shirt {
    transform: rotateY(0);
  }

  .shirt,
  .profile {
    transition: transform 0.5s ease;
  }
}
