@use "tailwindcss";
@use "styles/gasp" as *;

$transition: all 0.25s;
//@use "styles/colors" as *;

$black: hsl(0 0% 0%);
$white: hsl(0 0% 100%);
$pink: hsl(314 97% 44%);
$red: hsl(0, 100%, 50%);
$purple: hsl(248 65% 50%);
$yellow: hsl(73, 100%, 50%);
$blue: hsl(220, 100%, 50%);
$green: hsl(108, 100%, 50%);
$grey: hsl(0 0% 50%);
$grey-light: hsl(0 0% 70%);
$grey-lighter: hsl(0, 0%, 95%);
$grey-dark: hsl(0 0% 20%);
$grey-darker: hsl(0, 0%, 10%);
$transparent: hsla(0, 0%, 0%, 0);

:root {
  --black: #{$black};
  --white: #{$white};
  --pink: #{$pink};
  --red: #{$red};
  --purple: #{$purple};
  --yellow: #{$yellow};
  --blue: #{$blue};
  --green: #{$green};
  --grey: #{$grey};
  --grey-light: #{$grey-light};
  --grey-lighter: #{$grey-lighter};
  --grey-dark: #{$grey-dark};
  --grey-darker: #{$grey-darker};
  --transparent: #{$transparent};
}

[data-theme="light"] {
  * {
    &::selection {
      background-color: $white;
      color: $black;
    }
  }

  body {
    background-color: $black;
    color: $white;
  }

  a {
    color: $grey;

    &:hover {
      color: $white;
    }

    svg {
      color: $white;
    }
  }

  svg {
    &:hover polygon,
    &:hover path,
    &:hover rect {
      fill: $white;
    }
  }

  hr {
    color: $grey;
  }

  .design {
    transition: $transition;
    h3 {
      color: $white;
    }
    &:hover {
      background-color: $white;
      * {
        color: $black;
      }
    }
  }

  .dotted-grid {
    background-image: radial-gradient($grey-darker 2.5px, $transparent 0px);
  }
}

//@use "styles/cursor" as *;

:root {
  --cursor-size: 15px;
  --cursor-size-active: 150px;
}

.use-custom-cursor body * {
  cursor: none;
}

.app-cursor {
  position: fixed;
  left: 0;
  top: 0;
  width: var(--cursor-size);
  height: var(--cursor-size);
  border-radius: 50%;
  background: $white;
  color: $black;
  mix-blend-mode: difference;
  pointer-events: none;
  z-index: 1000;
  transform: translate(-50%, -50%);
  transition:
    width 0.18s ease,
    height 0.18s ease,
    opacity 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.app-cursor::after {
  content: attr(data-label);
  opacity: 0;
  transform: translateY(2px) scale(1);
  transition:
    opacity 0.18s ease,
    transform 0.18s ease;
}

.app-cursor.is-active {
  width: var(--cursor-size-active);
  height: var(--cursor-size-active);
}

.app-cursor.has-label {
  width: var(--cursor-size-active);
  height: var(--cursor-size-active);
  border-radius: 100px;
}

.app-cursor.has-label::after {
  opacity: 1;
  transform: translateY(0) scale(1);
}

//@use "styles/animations" as *;

@keyframes noise {
  0% {
    transform: translate3d(0, 9rem, 0);
  }
  10% {
    transform: translate3d(-1rem, -4rem, 0);
  }
  20% {
    transform: translate3d(-8rem, 2rem, 0);
  }
  30% {
    transform: translate3d(9rem, -9rem, 0);
  }
  40% {
    transform: translate3d(-2rem, 7rem, 0);
  }
  50% {
    transform: translate3d(-9rem, -4rem, 0);
  }
  60% {
    transform: translate3d(2rem, 6rem, 0);
  }
  70% {
    transform: translate3d(7rem, -8rem, 0);
  }
  80% {
    transform: translate3d(-9rem, 1rem, 0);
  }
  90% {
    transform: translate3d(6rem, -5rem, 0);
  }
  to {
    transform: translate3d(-7rem, 0, 0);
  }
}

//@use "styles/custom-tailwind-styles" as *;

//

@custom-variant dark (&:where([data-theme="dark"], [data-theme="dark"] *));
@custom-variant light (&:where([data-theme="light"], [data-theme="light"] *));

$breakpoint-3xl: 120rem; //1920
$breakpoint-4xl: 160rem; //2560

@theme {
  --breakpoint-3xl: 120rem;
  --breakpoint-4xl: 160rem;
}

@font-face {
  font-family: "Actay";
  src: url("./assets/fonts/ActayWide-Bold.otf") format("opentype");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

.Actay {
  font-family: "Actay", sans-serif;
}

* {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 200;
  font-style: normal;

  a,
  .pointer-active,
  .design > *,
  #lang-toggle {
  }

  &::-webkit-scrollbar {
    display: none;
  }
}

.dotted-grid {
  background-size: 25px 25px;
}

.noise {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  transform: translateZ(0);

  &:before {
    content: "";
    top: -10rem;
    left: -10rem;
    width: calc(100% + 20rem);
    height: calc(100% + 20rem);
    position: fixed;
    background-image: url("assets/images/noise.png");
    opacity: 0.15;
    pointer-events: none;
    -webkit-animation: noise 1s steps(2) infinite;
    animation: noise 1s steps(2) infinite;
  }
}

.design {
  transition: $transition;

  &:hover {
    transform: translate(5px, 5px);
    z-index: 1;
  }
}

h1,
h2,
h3,
h4 {
  font-family: "Actay", sans-serif;
  text-transform: uppercase;
}

h1 {
  font-size: clamp(2.5rem, 12.5vw, 17.5rem);
  line-height: 12.5vw;
}

h2 {
  font-size: clamp(1.5rem, 4vw, 8rem);
}

h3 {
  font-size: clamp(1rem, 3vw, 4.5rem);
}

h4 {
  font-size: clamp(1rem, 2vw, 3rem);
}

p,
a,
button,
.app-cursor {
  font-size: clamp(1rem, 1.25vw, 2rem);
}

small {
  font-size: clamp(1rem, 1vw, 1.25rem);
}

button {
  color: $grey;

  &:hover {
    color: $white;
  }
}

.progress-bar {
  height: 5px;
  width: 0;
  transition: width 0.1s ease;
}

.dotted-grid {
  background-size: 25px 25px;
}

.corner-frame {
  --cf-color: currentColor;
  --cf-size: 1px;
  --cf-length: 24px;

  background:
    /* top-left */
    linear-gradient(to right, var(--cf-color) 0%, var(--cf-color) 100%) top left / var(--cf-length) var(--cf-size) no-repeat,
    linear-gradient(to bottom, var(--cf-color) 0%, var(--cf-color) 100%) top left / var(--cf-size) var(--cf-length) no-repeat,
    /* top-right */ linear-gradient(to right, var(--cf-color) 0%, var(--cf-color) 100%) top right / var(--cf-length) var(--cf-size) no-repeat,
    linear-gradient(to bottom, var(--cf-color) 0%, var(--cf-color) 100%) top right / var(--cf-size) var(--cf-length) no-repeat,
    /* bottom-left */ linear-gradient(to right, var(--cf-color) 0%, var(--cf-color) 100%) bottom left / var(--cf-length) var(--cf-size) no-repeat,
    linear-gradient(to bottom, var(--cf-color) 0%, var(--cf-color) 100%) bottom left / var(--cf-size) var(--cf-length) no-repeat,
    /* bottom-right */ linear-gradient(to right, var(--cf-color) 0%, var(--cf-color) 100%) bottom right / var(--cf-length) var(--cf-size) no-repeat,
    linear-gradient(to bottom, var(--cf-color) 0%, var(--cf-color) 100%) bottom right / var(--cf-size) var(--cf-length) no-repeat;

  background-origin: padding-box;
}
