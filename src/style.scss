@use "tailwindcss";

@custom-variant dark (&:where([data-theme="dark"], [data-theme="dark"] *));
@custom-variant light (&:where([data-theme="light"], [data-theme="light"] *));

$black: hsl(0 0% 0%);
$white: hsl(0 0% 100%);
$pink: hsl(314 97% 44%);
$purple: hsl(248 65% 50%);
$yellow: hsl(73, 100%, 50%);
$grey: hsl(0 0% 50%);
$grey-light: hsl(0 0% 70%);
$grey-dark: hsl(0 0% 20%);
$floralWhite: hsl(40, 100%, 95%);
$floralWhite-light: hsl(40, 100%, 99%);
$floralWhite-dark: hsl(40, 100%, 90%);
$transparent: hsla(0, 0%, 0%, 0);
$transition: all 0.3s cubic-bezier(0.65, 0.05, 0.36, 1);

:root {
  --black: #{$black};
  --white: #{$white};
  --pink: #{$pink};
  --purple: #{$purple};
  --yellow: #{$yellow};
  --grey: #{$grey};
  --grey-light: #{$grey-light};
  --grey-dark: #{$grey-dark};
  --floralWhite: #{$floralWhite};
  --floralWhite-light: #{$floralWhite-light};
  --floralWhite-dark: #{$floralWhite-dark};
  --transparent: #{$transparent};
}

[data-theme="light"] {
  * {
    &::selection {
      background-color: $grey-dark;
      color: $floralWhite;
    }
  }

  body {
    background-color: $floralWhite;
    color: $grey-dark;
  }

  polygon.star {
    fill: $grey-dark;
  }

  #theme-toggle {
    fill: $grey-dark;
  }

  .active {
    background-color: $grey-dark;
    color: $floralWhite;
  }

  .progress-bar {
    background-color: $grey-dark;
  }

  p {
    color: $grey;
  }

  .hero {
    color: $grey-dark;
  }

  footer * p {
    color: $grey-dark;
  }

  header * p {
    color: $grey-dark;
  }

  .item {
    color: $grey;

    &:hover {
      color: $grey-dark;

      p {
        color: $grey-dark;
      }
    }
  }
}

[data-theme="dark"] {
  * {
    &::selection {
      background-color: $white;
      color: $black;
    }
  }

  body {
    background-color: $black;
    color: $white;
  }

  .glow {
    filter: drop-shadow(0px 0px 150px $white);
  }

  polygon.star {
    fill: $white;
  }

  #theme-toggle {
    fill: $white;
  }

  .active {
    background-color: $white;
    color: $black;
  }

  .progress-bar {
    background-color: $white;
  }

  p {
    color: $grey;
  }

  .hero {
    color: $white;
  }

  footer * p {
    color: $white;
  }

  header * p {
    color: $white;
  }

  .item {
    color: $grey;

    &:hover {
      color: $white;

      p {
        color: $white;
      }
    }
  }
}

$breakpoint-xs: calc(40rem - 12rem); //640
$breakpoint-md: calc(48rem - 12rem); //768
$breakpoint-lg: calc(64rem - 12rem); //1024
$breakpoint-xl: calc(80rem - 12rem); //1280
$breakpoint-2xl: calc(90rem - 12rem); //1440
$colonnetitulus: 6rem; //96

@theme {
  --breakpoint-xs: 40rem;
  --breakpoint-md: 48rem;
  --breakpoint-lg: 64rem;
  --breakpoint-xl: 80rem;
  --breakpoint-2xl: 90rem;
  --colonnetitulus: 6rem;
}

.fustat {
  font-family: "Fustat", sans-serif;
  letter-spacing: -4px;
}

.biryani {
  font-family: "Biryani", sans-serif;
}

.jost {
  font-family: "Jost", sans-serif;
}

@keyframes move {
  from {
    margin-left: 0;
  }
  to {
    margin-left: 50%;
  }
}

@keyframes marquee {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}

hr {
  color: var(--grey);
}

* {
  font-family: "Geologica", sans-serif;
  text-wrap: balance;
  cursor: url("assets/images/cursors/cursor-inactive.png"), auto;

  a,
  &.pointer-active,
  &.item > * {
    cursor: url("assets/images/cursors/cursor-active.png"), pointer;
  }

  &::-webkit-scrollbar {
    display: none;
  }
}

html {
  scroll-behavior: smooth;
}

body {
  word-break: normal;
  overflow-wrap: break-word;
  hyphens: auto;
}

.grain {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  transform: translateZ(0);

  &:before {
    content: "";
    top: -10rem;
    left: -10rem;
    width: calc(100% + 20rem);
    height: calc(100% + 20rem);
    position: fixed;
    background-image: url(https://upload.wikimedia.org/wikipedia/commons/5/5c/Image_gaussian_noise_example.png);
    opacity: 0.15;
    pointer-events: none;
    -webkit-animation: noise 1s steps(2) infinite;
    animation: noise 1s steps(2) infinite;
  }

  @-webkit-keyframes noise {
    to {
      transform: translate3d(-7rem, 0, 0);
    }
  }

  @keyframes noise {
    0% {
      transform: translate3d(0, 9rem, 0);
    }
    10% {
      transform: translate3d(-1rem, -4rem, 0);
    }
    20% {
      transform: translate3d(-8rem, 2rem, 0);
    }
    30% {
      transform: translate3d(9rem, -9rem, 0);
    }
    40% {
      transform: translate3d(-2rem, 7rem, 0);
    }
    50% {
      transform: translate3d(-9rem, -4rem, 0);
    }
    60% {
      transform: translate3d(2rem, 6rem, 0);
    }
    70% {
      transform: translate3d(7rem, -8rem, 0);
    }
    80% {
      transform: translate3d(-9rem, 1rem, 0);
    }
    90% {
      transform: translate3d(6rem, -5rem, 0);
    }
    to {
      transform: translate3d(-7rem, 0, 0);
    }
  }
}

.hero {
  font-size: 6.25rem;
  text-transform: uppercase;
}

h1 {
  font-size: 4rem;
  text-transform: uppercase;
}

h2 {
  font-size: 3rem;
  text-transform: uppercase;
}

h3 {
  font-size: 1.75rem;
  text-transform: uppercase;
}

h4 {
  font-size: 1.5rem;
  text-transform: uppercase;
}

.numbers {
  font-size: 10.75rem;
}

p {
  font-weight: 100;
}

b {
  font-weight: 500;
  text-transform: uppercase;
}

a {
  &:hover {
    font-weight: bold;
  }
}

#header-logo {
  transition: $transition;
}

.item {
  filter: grayscale(100%);
  transition: $transition;
  height: fit-content;

  &:hover {
    transform: translate(10px, 10px);
    filter: grayscale(0%);
  }
}

.active {
  font-weight: 900;
  transition: $transition;
  padding: 0 5px;
}

iframe,
video {
  border-radius: 15px;
  border: none;
}

.progress-bar {
  height: 5px;
  width: 0;
  transition: width 0.1s ease;
}

.card {
  position: relative;
  border-radius: 15px;
  overflow: hidden;
}

.card img {
  filter: grayscale(100%) brightness(0.9) contrast(1.1);
  transition: all 0.3s ease;

  &:hover {
    filter: grayscale(0%) brightness(0.9) contrast(1.1);
  }
}

#scroll-to-top {
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
  transition:
    opacity 0.3s,
    visibility 0.3s,
    background-color 0.3s;

  &.visible {
    visibility: visible;
    opacity: 1;
    pointer-events: auto;
  }
}

polygon.star {
  transform-origin: center center;
  transform-box: fill-box;
}

@media (max-width: 64rem) {
  .hero {
    font-size: 3rem;
  }
  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2rem;
  }

  h3 {
    font-size: 1.25rem;
  }

  h4 {
    font-size: 1rem;
  }

  .numbers {
    font-size: 7.75rem;
  }

  #about {
    padding-top: calc(2 * var(--colonnetitulus));
  }
}
